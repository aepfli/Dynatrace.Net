using System.Collections.Generic;
using Dynatrace.Net.Environment.Events.Models;

namespace Dynatrace.Net.Common.Converters
{
	public class MeTypesConverter : JsonEnumConverter<MeTypes>
	{
		private static readonly Dictionary<MeTypes, string> s_pairs = new Dictionary<MeTypes, string>
		{
			[MeTypes.ApmSecurityGateway] = "APM_SECURITY_GATEWAY",
			[MeTypes.Application] = "APPLICATION",
			[MeTypes.ApplicationMethod] = "APPLICATION_METHOD",
			[MeTypes.ApplicationMethodGroup] = "APPLICATION_METHOD_GROUP",
			[MeTypes.AppmonServer] = "APPMON_SERVER",
			[MeTypes.AppmonSystemProfile] = "APPMON_SYSTEM_PROFILE",
			[MeTypes.AutoScalingGroup] = "AUTO_SCALING_GROUP",
			[MeTypes.AuxiliarySyntheticTest] = "AUXILIARY_SYNTHETIC_TEST",
			[MeTypes.AwsApplicationLoadBalancer] = "AWS_APPLICATION_LOAD_BALANCER",
			[MeTypes.AwsAvailabilityZone] = "AWS_AVAILABILITY_ZONE",
			[MeTypes.AwsCredentials] = "AWS_CREDENTIALS",
			[MeTypes.AwsLambdaFunction] = "AWS_LAMBDA_FUNCTION",
			[MeTypes.AwsNetworkLoadBalancer] = "AWS_NETWORK_LOAD_BALANCER",
			[MeTypes.AzureApiManagementService] = "AZURE_API_MANAGEMENT_SERVICE",
			[MeTypes.AzureApplicationGateway] = "AZURE_APPLICATION_GATEWAY",
			[MeTypes.AzureCosmosDb] = "AZURE_COSMOS_DB",
			[MeTypes.AzureCredentials] = "AZURE_CREDENTIALS",
			[MeTypes.AzureEventHub] = "AZURE_EVENT_HUB",
			[MeTypes.AzureEventHubNamespace] = "AZURE_EVENT_HUB_NAMESPACE",
			[MeTypes.AzureFunctionApp] = "AZURE_FUNCTION_APP",
			[MeTypes.AzureIotHub] = "AZURE_IOT_HUB",
			[MeTypes.AzureLoadBalancer] = "AZURE_LOAD_BALANCER",
			[MeTypes.AzureMgmtGroup] = "AZURE_MGMT_GROUP",
			[MeTypes.AzureRedisCache] = "AZURE_REDIS_CACHE",
			[MeTypes.AzureRegion] = "AZURE_REGION",
			[MeTypes.AzureServiceBusNamespace] = "AZURE_SERVICE_BUS_NAMESPACE",
			[MeTypes.AzureServiceBusQueue] = "AZURE_SERVICE_BUS_QUEUE",
			[MeTypes.AzureServiceBusTopic] = "AZURE_SERVICE_BUS_TOPIC",
			[MeTypes.AzureSqlDatabase] = "AZURE_SQL_DATABASE",
			[MeTypes.AzureSqlElasticPool] = "AZURE_SQL_ELASTIC_POOL",
			[MeTypes.AzureSqlServer] = "AZURE_SQL_SERVER",
			[MeTypes.AzureStorageAccount] = "AZURE_STORAGE_ACCOUNT",
			[MeTypes.AzureSubscription] = "AZURE_SUBSCRIPTION",
			[MeTypes.AzureTenant] = "AZURE_TENANT",
			[MeTypes.AzureVm] = "AZURE_VM",
			[MeTypes.AzureVmScaleSet] = "AZURE_VM_SCALE_SET",
			[MeTypes.AzureWebApp] = "AZURE_WEB_APP",
			[MeTypes.CfApplication] = "CF_APPLICATION",
			[MeTypes.CfFoundation] = "CF_FOUNDATION",
			[MeTypes.CinderVolume] = "CINDER_VOLUME",
			[MeTypes.CloudApplication] = "CLOUD_APPLICATION",
			[MeTypes.CloudApplicationInstance] = "CLOUD_APPLICATION_INSTANCE",
			[MeTypes.CloudApplicationNamespace] = "CLOUD_APPLICATION_NAMESPACE",
			[MeTypes.ContainerGroup] = "CONTAINER_GROUP",
			[MeTypes.ContainerGroupInstance] = "CONTAINER_GROUP_INSTANCE",
			[MeTypes.CustomApplication] = "CUSTOM_APPLICATION",
			[MeTypes.CustomDevice] = "CUSTOM_DEVICE",
			[MeTypes.CustomDeviceGroup] = "CUSTOM_DEVICE_GROUP",
			[MeTypes.DcrumApplication] = "DCRUM_APPLICATION",
			[MeTypes.DcrumService] = "DCRUM_SERVICE",
			[MeTypes.DcrumServiceInstance] = "DCRUM_SERVICE_INSTANCE",
			[MeTypes.DeviceApplicationMethod] = "DEVICE_APPLICATION_METHOD",
			[MeTypes.Disk] = "DISK",
			[MeTypes.DockerContainerGroup] = "DOCKER_CONTAINER_GROUP",
			[MeTypes.DockerContainerGroupInstance] = "DOCKER_CONTAINER_GROUP_INSTANCE",
			[MeTypes.DynamoDbTable] = "DYNAMO_DB_TABLE",
			[MeTypes.EbsVolume] = "EBS_VOLUME",
			[MeTypes.Ec2Instance] = "EC2_INSTANCE",
			[MeTypes.ElasticLoadBalancer] = "ELASTIC_LOAD_BALANCER",
			[MeTypes.Environment] = "ENVIRONMENT",
			[MeTypes.ExternalSyntheticTestStep] = "EXTERNAL_SYNTHETIC_TEST_STEP",
			[MeTypes.GcpZone] = "GCP_ZONE",
			[MeTypes.Geolocation] = "GEOLOCATION",
			[MeTypes.GeolocSite] = "GEOLOC_SITE",
			[MeTypes.GoogleComputeEngine] = "GOOGLE_COMPUTE_ENGINE",
			[MeTypes.Host] = "HOST",
			[MeTypes.HostGroup] = "HOST_GROUP",
			[MeTypes.HttpCheck] = "HTTP_CHECK",
			[MeTypes.HttpCheckStep] = "HTTP_CHECK_STEP",
			[MeTypes.Hypervisor] = "HYPERVISOR",
			[MeTypes.KubernetesCluster] = "KUBERNETES_CLUSTER",
			[MeTypes.KubernetesNode] = "KUBERNETES_NODE",
			[MeTypes.MobileApplication] = "MOBILE_APPLICATION",
			[MeTypes.NetworkInterface] = "NETWORK_INTERFACE",
			[MeTypes.NeutronSubnet] = "NEUTRON_SUBNET",
			[MeTypes.OpenstackProject] = "OPENSTACK_PROJECT",
			[MeTypes.OpenstackRegion] = "OPENSTACK_REGION",
			[MeTypes.OpenstackVm] = "OPENSTACK_VM",
			[MeTypes.Os] = "OS",
			[MeTypes.ProcessGroup] = "PROCESS_GROUP",
			[MeTypes.ProcessGroupInstance] = "PROCESS_GROUP_INSTANCE",
			[MeTypes.RelationalDatabaseService] = "RELATIONAL_DATABASE_SERVICE",
			[MeTypes.Service] = "SERVICE",
			[MeTypes.ServiceInstance] = "SERVICE_INSTANCE",
			[MeTypes.ServiceMethod] = "SERVICE_METHOD",
			[MeTypes.ServiceMethodGroup] = "SERVICE_METHOD_GROUP",
			[MeTypes.SwiftContainer] = "SWIFT_CONTAINER",
			[MeTypes.SyntheticLocation] = "SYNTHETIC_LOCATION",
			[MeTypes.SyntheticTest] = "SYNTHETIC_TEST",
			[MeTypes.SyntheticTestStep] = "SYNTHETIC_TEST_STEP",
			[MeTypes.Virtualmachine] = "VIRTUALMACHINE",
			[MeTypes.VmwareDatacenter] = "VMWARE_DATACENTER"
		};

		protected override Dictionary<MeTypes, string> Pairs { get; } = s_pairs;

		protected override string EntityString { get; } = "me type";
	}
}
